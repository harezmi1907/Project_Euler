
import org.junit.jupiter.api.Test;

/**
 * @author ykeskin
 * @since 7/17/2020
 */
public class q1_10 {
    
    public static void main(String[] args) {

    }
    /**
     If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
     The sum of these multiples is 23.

     Find the sum of all the multiples of 3 or 5 below 1000.
     ANSWER = 233168
     Time elapsed in seconds: 0.003046001
     */
    @Test
    void q1_Multiples_of_3_and_5 () {
        long startTime = System.nanoTime();
        int sum = 0;
        int num = 3;
        while(num<1000){
            if(num %3 == 0)
                sum += num++;
            else if(num %5 == 0)
                sum += num++;
            else
                num++;
        }
        System.out.println("TOTAL=" + sum);
        System.out.println("Time elapsed in seconds: " + (System.nanoTime() - startTime) / 1000_000_000.0);
    }

    /**
     Each new term in the Fibonacci sequence is generated by adding the previous two terms.
     By starting with 1 and 2, the first 10 terms will be:

     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

     By considering the terms in the Fibonacci sequence whose values do not exceed four million,
     find the sum of the even-valued terms.
     ANSWER = 4613732
     Time elapsed in seconds: 0.003055299
     */
    @Test
    void q2_Even_Fibonacci_numbers () {
        long startTime = System.nanoTime();

        int sum = 0;
        int num = 1;
        int newNum = 2;
        while(newNum < 4_000_000) {
            if(newNum %2 == 0){
                sum += newNum;
            }
            int tempNum = newNum;
            newNum += num;
            num = tempNum;
        }
        System.out.println("TOTAL = " + sum);
        System.out.println("Time elapsed in seconds: " + (System.nanoTime() - startTime) / 1000_000_000.0);
    }

    /**
     The prime factors of 13195 are 5, 7, 13 and 29.

     What is the largest prime factor of the number 600851475143 ?
     RESULT = 6857
     Time elapsed in seconds: 0.012320099
     */
    @Test
    void q3_Largest_prime_factor () {
        long startTime = System.nanoTime();
//        long input = 600851475143L;
        double input = 221;
        long num = (long) Math.floor(Math.sqrt(input));
        int LPF;
//        System.out.println(num);
        if(input % 2 == 0){
            while(input % 2 == 0){
               input /= 2;
            }
            LPF = 2;
        } else
            LPF = 1;

        int div = 3;
        while (num>1 && div <= num) {
            if( input % div == 0) {
                while(input % div == 0){
                    input /= div;
                }
                LPF = div;
            }
            else
                div+=2;
        }
        System.out.println("RESULT = " + LPF);
        System.out.println("Time elapsed in seconds: " + (System.nanoTime() - startTime) / 1000_000_000.0);
    }

    @Test
    void q4 () {
    }
}
